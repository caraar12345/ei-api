name: Docker build

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'fastapi'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: github_checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        id: docker_qemu
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: docker_buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        id: docker_login
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Read package name from pyproject.toml
        uses: SebRollen/toml-action@v1.0.0
        id: package_name
        with:
          file: 'pyproject.toml'
          field: 'tool.poetry.name'

      - name: Read version from pyproject.toml
        uses: SebRollen/toml-action@v1.0.0
        id: package_version
        with:
          file: 'pyproject.toml'
          field: 'tool.poetry.version'

      - name: Docker metadata
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            aaroncarson/${{ steps.package_version.outputs.name }}
          flavor: |
            latest=true
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=${{ steps.package_version.outputs.value }}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v3
        id: docker_build_push
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Create release
        id: github_create_release
        run: |
          gh release create \
            "v${{ steps.package_version.outputs.value }}" \
            --generate-notes \
            --title "{{ steps.package_version.outputs.name }} - v${{ steps.package_version.outputs.value }}" \
            --target ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
